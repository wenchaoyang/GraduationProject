#include <iom16v.h> 
#include <macros.h> 

#define OC0_OUT_EN DDRB |= 0b00001000
#define OC2_OUT_EN DDRD |= 0b10000000
#define OC0_ON TCCR0 = 0B01101001 
#define OC2_ON TCCR2 = 0B01101001
#define OC0_OFF TCCR0 = 0B00000000
#define OC2_OFF TCCR2 = 0B00000000
#define OC1A_OFF DDRD &= 0B11011111
#define OC1B_OFF DDRD &= 0B11101111
#define OC1A_ON DDRD |= 0B00100000
#define OC1B_ON DDRD |= 0B00010000

unsigned char str[5];
//*********发送一个字符************//
void put_c(unsigned char c) 
{
	while( !(UCSRA & (1<<UDRE)) );
	UDR=c;
}
//*********发送一串字符************//
void put_s(unsigned char *ptr)
{
	while (*ptr)
	{
		put_c(*ptr++);
	}
	put_c(0x0D);	  //换行
	//put_c(0x0A);  //回车
}
//*********获取一个字符************//
unsigned char get_c(void)
{	while(!(UCSRA&(1<<RXC)));
	return UDR;
}	
//*********获取一串字符************//
void get_s(void)
{
 	char i;
 	for(i=0;i<5;i++)
	{ str[i]=0;
	} 
	for(i=0;i<5;i++)
	{
	  str[i]=get_c();
	  if(str[i]=='#')  break;
	}
}
//*********USART 初始化************//
void USART_init(void)
{

    //USART 9600 8, n,1  超级终端等也要设成同样的设置才能通讯
    UCSRC = (1<<URSEL) | 0x06;
    //异步，8位数据，无奇偶校验，一个停止位，无倍速  
    UBRRL= 103;//(F_CPU/BAUDRATE/16-1)%256;//=12即9600波特率
    UBRRH= 0x00;//(F_CPU/BAUDRATE/16-1)/256;
    UCSRA = 0x02;//0x00;正常异步方式
    UCSRB = (1<<RXEN)|(1<<TXEN);//使能接收，使能发送
    
}
//*********PWM功能定时器的初始化************//
void timer_init(void) 
{ 
 
 OC0_OUT_EN;
 OC2_OUT_EN;
 OC0_OFF;
 OC2_OFF;
 OC1A_OFF;
 OC1B_OFF;
 //SREG=0x80;         //使能全局中断
// TIMSK=(1<<OCIE1A); //使能比较匹配中断
 TCCR1A=0B10100001; //快速PWM模式，无分频，比较匹配时置零，TOP时置1
 TCCR1B=0B00001001;
}
 //*********毫秒延时************//
void delay(int time)
{
 int i;
 for(;time>0;time--)
  for(i=0;i<100;i++);
}
//**对接收到的字符（放str[]数组）甄别转化为百分比**//
//**str[]收到的字符以a、b、l、r开头，#结束，中间存放速度百分比**//
unsigned char Judge_s(void)
{
  unsigned char j,m;
  j=0;
  if(str[3]=='#')
  {
    if(str[1]>='0'&&str[1]<='9'&&str[2]>='0'&&str[2]<='9')
	{
	  j=(str[1]-48)*10+str[2]-48;
	  put_c(j);
	}
	else  put_s("error percent");
  }
  else  put_s("error end");
  m=100-j;
  return(m);
}
//*********根据接收到的信息执行具体输出************//
void Implement(unsigned char k)
{
  unsigned char i;
  switch(str[0])
  {
    case 'a': OC1A_ON;   //前进ahead
 		 	  OC1B_ON;
 			  PORTD &=0X11001111;
 			  delay(100);
		 	  OC1A_OFF;  
		 	  OC1B_OFF; 
			  OC0_ON;
			  OC2_ON;
			  for(i=40;i>=k;i-=4)
			  {
			    OCR0=i; OCR2=i; delay(100); 	   		   
			  }
			  OCR0=k;
			  OCR2=k;
			  if(v<5)  //如果前进速度给到95以上，就不用PWM功能，直接IO口驱动
			  {
			   OC0_OFF;
			   OC2_OFF;
			   PORTB &=0Xf7;
			   PORTD &=0X7f;
			  }
			 
			   break;
	case 'b': OC1A_ON;   //后退back
		 	  OC1B_ON;
			  OC0_OFF;
			  OC2_OFF;
			  PORTB |=0X08;
			  PORTD |=0X80;
			  for(i=40;i>=k;i-=4)
			  {
			    OCR1A=i; OCR1B=i; delay(100); 	   		   
			  }
			  OCR1A=k;
			  OCR1B=k;
		 	  break;
	case 'l': OC1B_ON;   //左转left
		 	  OC1A_ON;
 			  PORTD &=0X11001111;
 			  delay(100);
		 	  OC1A_OFF;
			  OC0_OFF;
			  PORTB |=0X08;
			  OC2_ON;
			  for(i=40;i>=k;i-=4)
			  {
			    OCR2=i; OCR1B=i; delay(100); 	   		   
			  }
			  OCR1B=k;
			  OCR2=k;
		 	  break;
	case 'r': 
			  OC1A_ON;    //右转right
 		 	  OC1B_ON;
 			  PORTD &=0X11001111;
 			  delay(100);
		 	  OC1B_OFF;
			  OC0_ON;
			  OC2_OFF;
			  PORTD |=0X80;
			  for(i=40;i>=k;i-=4)
			  {
			    OCR1A=i; OCR0=i; delay(100); 	   		   
			  }
			  OCR0=k;
			  OCR1A=k;
		 	  break;
	default : OC1A_ON;  //Stop
 		 	  OC1B_ON;
 			  PORTD &=0X11001111;
 			  delay(100);
			  OC1A_OFF;  
		 	  OC1B_OFF;
			  OC0_OFF;
			  OC2_OFF;
			  PORTB |=0X08;
 			  PORTD |=0X80;
			  put_s("STOP");
  }
}
void main(void) 
{
 char dir_change_flag=0,dir_flag;
 unsigned char percent;
 USART_init();
 timer_init();
 SEI(); 
 DDRA=0XFF;
 PORTA=0X00;
 
 OC1A_ON;
 OC1B_ON;
 PORTD &=0X11001111;
 delay(100);
 OC1A_OFF;
 OC1B_OFF;
 OC0_OFF;
 OC2_OFF;
 PORTB |=0X08;
 PORTD |=0X80;
 delay(100);
 while(1)
 {
  get_s();//接收命令
  percent=Judge_s();//命令甄别
  Implement(percent);//输出驱动执行
  delay(10);
 }
}
